% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bloomjoin.R
\name{bloom_join}
\alias{bloom_join}
\title{Join two data frames using a Bloom filter pre-filter}
\usage{
bloom_join(
  x,
  y,
  by = NULL,
  type = c("inner", "left", "right", "full", "semi", "anti"),
  engine = c("auto", "bloom", "fuse"),
  prefilter_side = c("auto", "x", "y"),
  fpr = 0.01,
  n_hint = NULL,
  verbose = FALSE
)
}
\arguments{
\item{x, y}{Data frames to join.}

\item{by}{A character vector or named character vector specifying the join
columns, just like the \code{by} argument in the dplyr join verbs.}

\item{type}{Type of join to perform. One of \code{"inner"}, \code{"left"}, \code{"right"},
\code{"full"}, \code{"semi"}, or \code{"anti"}.}

\item{engine}{Probabilistic pre-filter to use. Currently only \code{"bloom"} is
implemented; \code{"auto"} resolves to \code{"bloom"} and \code{"fuse"} is reserved for a
future binary-fuse implementation.}

\item{prefilter_side}{Which input to pre-filter. \code{"x"} filters the first
table, \code{"y"} filters the second table, and \code{"auto"} picks a side based on
join semantics and distinct-count estimates.}

\item{fpr}{Target false positive rate for the Bloom filter. Must be between
0 and 1.}

\item{n_hint}{Optional estimated distinct counts for the join keys. Supply a
numeric scalar to use the same hint for both tables or a named list/vector
with entries \code{x} and/or \code{y}.}

\item{verbose}{Logical flag controlling diagnostic output.}
}
\value{
A data frame identical to the corresponding dplyr join with an
additional \code{"bloomjoin"} class and a \code{bloom_metadata} attribute describing
the pre-filter decision.
}
\description{
Join two data frames using a Bloom filter pre-filter
}
\examples{
x <- data.frame(id = 1:100000, value_x = rnorm(100000))
y <- data.frame(id = 50001:60000, value_y = rnorm(10000))
bloom_join(x, y, by = "id", verbose = TRUE)
}
